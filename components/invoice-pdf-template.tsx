import { Document, Page, Text, View, StyleSheet, Font } from '@react-pdf/renderer'
import { Invoice } from '@/hooks/use-invoices'
import { format } from 'date-fns'

Font.register({
  family: 'Roboto',
  src: 'https://cdnjs.cloudflare.com/ajax/libs/ink/3.1.10/fonts/Roboto/roboto-light-webfont.ttf',
  fontWeight: 300
})

const styles = StyleSheet.create({
  page: {
    padding: 50,
    fontSize: 12,
    fontFamily: 'Roboto',
    backgroundColor: '#ffffff'
  },
  headerSection: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    marginBottom: 40,
    borderBottom: '2px solid #e5e7eb',
    paddingBottom: 20
  },
  companyInfo: {
    flex: 1
  },
  companyName: {
    fontSize: 24,
    fontWeight: 700,
    color: '#1e40af'
  },
  companyDetails: {
    marginTop: 10,
    color: '#4b5563',
    fontSize: 10
  },
  invoiceInfo: {
    alignItems: 'flex-end'
  },
  invoiceTitle: {
    fontSize: 32,
    fontWeight: 700,
    color: '#1e40af',
    marginBottom: 10
  },
  invoiceNumber: {
    fontSize: 14,
    color: '#6b7280'
  },
  section: {
    marginBottom: 30
  },
  sectionTitle: {
    fontSize: 14,
    fontWeight: 700,
    color: '#374151',
    marginBottom: 10
  },
  row: {
    flexDirection: 'row',
    marginBottom: 8
  },
  label: {
    width: 120,
    color: '#6b7280'
  },
  value: {
    flex: 1,
    color: '#111827'
  },
  status: {
    padding: '4px 12px',
    borderRadius: 15,
    fontSize: 12,
    alignSelf: 'flex-start'
  },
  statusPaid: {
    backgroundColor: '#dcfce7',
    color: '#166534'
  },
  statusPending: {
    backgroundColor: '#fef9c3',
    color: '#854d0e'
  },
  statusOverdue: {
    backgroundColor: '#fee2e2',
    color: '#991b1b'
  },
  footer: {
    position: 'absolute',
    bottom: 30,
    left: 50,
    right: 50,
    textAlign: 'center',
    color: '#6b7280',
    fontSize: 10,
    borderTop: '1px solid #e5e7eb',
    paddingTop: 20
  }
})

interface InvoicePDFTemplateProps {
  invoice: Invoice
}

export function InvoicePDFTemplate({ invoice }: InvoicePDFTemplateProps) {
  const getStatusStyle = (status: string) => {
    switch (status) {
      case "Paid":
        return styles.statusPaid
      case "Pending":
        return styles.statusPending
      case "Overdue":
        return styles.statusOverdue
      default:
        return {}
    }
  }

  return (
    <Document>
      <Page size="A4" style={styles.page}>
        <View style={styles.headerSection}>
          <View style={styles.companyInfo}>
            <Text style={styles.companyName}>Vidmantas Daugvila</Text>
            <View style={styles.companyDetails}>
              <Text>9 Murford Walk</Text>
              <Text>Bristol</Text>
              <Text>BS13 9LB</Text>
              <Text>vidmase@gmail.com</Text>
            </View>
          </View>
          <View style={styles.invoiceInfo}>
            <Text style={styles.invoiceTitle}>INVOICE</Text>
            <Text style={styles.invoiceNumber}>#{invoice.invoice_number}</Text>
          </View>
        </View>

        <View style={styles.section}>
          <Text style={styles.sectionTitle}>BILL TO</Text>
          <Text style={styles.value}>{invoice.client_name}</Text>
        </View>

        <View style={styles.section}>
          <Text style={styles.sectionTitle}>INVOICE DETAILS</Text>
          <View style={styles.row}>
            <Text style={styles.label}>Invoice Date:</Text>
            <Text style={styles.value}>{format(new Date(invoice.date), "PPP")}</Text>
          </View>
          <View style={styles.row}>
            <Text style={styles.label}>Amount:</Text>
            <Text style={styles.value}>${invoice.amount.toFixed(2)}</Text>
          </View>
          <View style={styles.row}>
            <Text style={styles.label}>Status:</Text>
            <Text style={[styles.status, getStatusStyle(invoice.status)]}>
              {invoice.status}
            </Text>
          </View>
          {invoice.description && (
            <View style={styles.row}>
              <Text style={styles.label}>Description:</Text>
              <Text style={styles.value}>{invoice.description}</Text>
            </View>
          )}
        </View>

        <Text style={styles.footer}>
          Generated by ClockMeIn on {format(new Date(), "PPP")}
        </Text>
      </Page>
    </Document>
  )
} 